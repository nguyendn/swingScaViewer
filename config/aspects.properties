names=jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances;jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent;jlp.perf.aspects.abstractAspects.AbstractCounterInstances;jlp.perf.aspects.abstractAspects.AbstractCounterPhRef;jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod;jlp.perf.aspects.abstractAspects.AbstractDurationMethod;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads;jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass;jlp.perf.aspects.abstractAspects.AbstractIntrospectionException;jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions;jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS;jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions;jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS;jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices;jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow;jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions;jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices;jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow;jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices;jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow;jlp.perf.aspects.abstractAspects.AbstractNbCallMethod;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize;jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod;jlp.aspectsJMX.concreteAspects.ConcreteCPUDurationSimpleMethodPerthis;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize;jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize;jlp.aspectsJMX.concreteAspects.ConcreteSqlStatementsDuration;jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5;jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeWithFile;jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache;jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive;jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters;jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod;jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS;jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable;jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS;jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking;jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking;jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking;jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis;jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage;jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod;jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric;jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3;jlp.perf.aspects.abstractAspects.AbstractGenericAspect;jlp.perf.aspects.abstractAspects.AbstractGenericAspect0;jlp.perf.aspects.abstractAspects.AbstractGenericAspect1;jlp.perf.aspects.abstractAspects.AbstractGenericAspect2;jlp.perf.aspects.abstractAspects.AbstractGenericAspect3;jlp.perf.aspects.abstractAspects.AbstractTester;jlp.perf.aspects.concreteAspects.ConcreteTester;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3;jlp.perf.aspects.abstractAspects.AbstractReplaceMethod;

prefnames=jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod;jlp.perf.aspects.abstractAspects.AbstractDurationMethod;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine;jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads;jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions;jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS;jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions;jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS;jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions;jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices;jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize;jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize;jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize;jlp.aspectsJMX.concreteAspects.ConcreteSqlStatementsDuration;jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5;jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5;jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache;jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache;jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive;jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking;jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking;jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic;jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple;jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature;jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage;jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric;jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2;jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3;jlp.perf.aspects.abstractAspects.AbstractGenericAspect;jlp.perf.aspects.abstractAspects.AbstractGenericAspect0;jlp.perf.aspects.abstractAspects.AbstractGenericAspect1;jlp.perf.aspects.abstractAspects.AbstractGenericAspect2;jlp.perf.aspects.abstractAspects.AbstractGenericAspect3;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2;jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3;jlp.perf.aspects.abstractAspects.AbstractReplaceMethod;

#jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize
comment.jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize=<html>Size of EntityManagerJPA  Session  or Hibernate Session.<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a HttpSession  is destroyed or invalidated,integer, <br/>if terminated by ms, the frequency is in ms.<br/>serialization =&gt; boolean true : serialization by writeObjet <br/>if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.type=abstract
jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.filelogs=jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.filelogs
jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.param1=jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.param2=jlp.perf.aspects.abstractAspects.AbstractJPACacheFirstLevelSize.serialization


#jlp.perf.aspects.abstractAspects.AbstractTester
comment.jlp.perf.aspects.abstractAspects.AbstractTester=<html><b>AbstractTester</b> Testing is a pointcut is correctly woven no paramreters to set.</html>
jlp.perf.aspects.abstractAspects.AbstractTester.type=abstract
jlp.perf.aspects.abstractAspects.AbstractTester.pointcut=methods





#jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric
comment.jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric=<html>Size of Http Session in Was (The pointcut must be specific for every WAS).<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a HttpSession  is destroyed or invalidated,integer, if terminated by ms, the frequency is in ms.<br/>serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.type=abstract
jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.filelogs=jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.filelogs
jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.param1=jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.param2=jlp.perf.aspects.abstractAspects.AbstractHttpSessionSizeGeneric.serialization




#AbstractCounterAllInstances
comment.jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances=<html>Count creation of instances. No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances.pointcut=constructeur
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances.filelogs=jlp.perf.aspects.abstractAspects.AbstractCounterAllInstances.filelogs



#AbstractCounterAllInstancesWithParent
comment.jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent=<html>Count creation of instances with Parent. No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent.pointcut=constructeur
jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent.filelogs=jlp.perf.aspects.abstractAspects.AbstractCounterAllInstancesWithParent.filelogs

#AbstractCounterInstances
comment.jlp.perf.aspects.abstractAspects.AbstractCounterInstances=<html>Count of creation of Instances filtered in a list. class_list =&gt; full name of the classes separated by ;</html> 
jlp.perf.aspects.abstractAspects.AbstractCounterInstances.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCounterInstances.pointcut=constructeur
jlp.perf.aspects.abstractAspects.AbstractCounterInstances.filelogs=jlp.perf.aspects.abstractAspects.AbstractCounterInstances.filelogs
jlp.perf.aspects.abstractAspects.AbstractCounterInstances.param1=jlp.perf.aspects.abstractAspects.AbstractCounterInstances.class_list

#AbstractCounterPhRef
comment.jlp.perf.aspects.abstractAspects.AbstractCounterPhRef=<html>Tracking garbage of Instances filtered in a List. class_list =&gt; full name of the classes separated by ; <br/>garbage =&gt; true/false ; freqRefresh ( frequency of logging in the file) =&gt; number</html>
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.pointcut=constructeur
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.filelogs=jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.filelogs
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.param1=jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.freqRefresh
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.param2=jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.garbage
jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.param3=jlp.perf.aspects.abstractAspects.AbstractCounterPhRef.class_list


#AbstractDebugThrowingMethod
comment.jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod=<html>Detection of methods that trow Exceptions. No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod.pointcut=retour|throwingException
jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractDebugThrowingMethod.filelogs

#AbstractNbCallMethod
comment.jlp.perf.aspects.abstractAspects.AbstractNbCallMethod=<html>Count Call of methods ( for detecting boucle).No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractNbCallMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractNbCallMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractNbCallMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractNbCallMethod.filelogs


#AbstractDurationMethod 
comment.jlp.perf.aspects.abstractAspects.AbstractDurationMethod=<html>Tracking Duration of Methods. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationMethod.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationMethod.param1=jlp.perf.aspects.abstractAspects.AbstractDurationMethod.durationMini

#AbstractDurationSimpleMethod 
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod=<html>Tracking Duration of Methods . durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethod.durationMini

#AbstractDurationSimpleMethodBeforeAfter
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter=<html>Tracking Duration of Methods . durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodBeforeAfter.durationMini

#AbstractDurationSimpleMethodPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow=<html>Tracking Duration of Methods. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodPercflow.durationMini

#AbstractDurationSimpleMethodValueParameters
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters=<html>Tracking Duration of Methods with Values of parameters.<br/> durationMini =&gt; filter on minimum duration of a Method in millis. <br/> parameters =&gt; list of ranks (integer)  of parameters separated by ; to get value </html> 
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.parameters
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.param2=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParameters.durationMini

#AbstractDurationSimpleMethodValueParametersPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow=<html>Tracking Duration of Methods with Values of parameters.<br/> durationMini =&gt; filter on minimum duration of a Method in millis. <br/> parameters =&gt; list of ranks (integer)  of parameters separated by ; to get value </html> 
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.parameters
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.param2=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPercflow.durationMini

#AbstractDurationSimpleMethodValueParametersPertarget
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget=<html>Tracking Duration of Methods with Values of parameters.<br/> durationMini =&gt; filter on minimum duration of a Method in millis. <br/> parameters =&gt; list of ranks (integer)  of parameters separated by ; to get value </html> 
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.parameters
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.param2=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueParametersPertarget.durationMini

#AbstractDurationSimpleMethodWithParent
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent=<html>Tracking Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParent.durationMini

#AbstractCPUDurationSimpleMethodWithParent
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent=<html>Tracking CPU Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParent.durationMini

#AbstractCPUDurationSimpleMethodWithParentAndSignature
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature=<html>Tracking CPU Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignature.durationMini


#AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis=<html>Tracking CPU Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentAndSignaturePerThis.durationMini

#AbstractCPUDurationSimpleMethodWithParentWithoutLine
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine=<html>Tracking CPU Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentWithoutLine.durationMini

#jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage
comment.jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage=<html>Tracking  Top Thread CPU usage . frequency =&gt; period in millis between 2 measures.<br/> percentMini =&gt; precent CPU usage minimun to trace thread  0&lt;percentMini&lt;=100 ;<br/> depthStackTrace =&gt; nb of displayed lines of the StackTrace </html>
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.type=abstract
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.filelogs=jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.filelogs
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.param1=jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.frequency
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.param2=jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.percentMini
jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.param3=jlp.perf.aspects.abstractAspects.AbstractThreadCPUUsage.depthStackTrace

#AbstractCPUDurationSimpleMethod
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod=<html>Tracking CPU Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethod.durationMini

#jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters
comment.jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters=<html>Tracking Duration of Methods with HTTPRequest parameter. <br/>attributes =&gt; list of names of attributes to follow separated by value of sep</html>
jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.type=abstract
jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.filelogs=jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.filelogs
jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.param1=jlp.perf.aspects.abstractAspects.AbstractMethodHttpRequestParameters.attributes

#AbstractCPUDurationSimpleMethodWithParentPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow=<html>Tracking Duration of Methods with Parent. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractCPUDurationSimpleMethodWithParentPercflow.durationMini

#AbstractDurationSimpleMethodWithParentPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow=T<html>racking Duration of Methods. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithParentPercflow.durationMini

#AbstractDurationSimpleMethodWithThreads
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads=<html>Tracking Duration of Methods with Threads ID. durationMini =&gt; filter on minimum duration of a Method in millis</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodWithThreads.durationMini

#AbstractIntrospectionClass
comment.jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass=<html>Introspection of Class Methods and Arguments. No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass.type=abstract
jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass.pointcut=introspection
jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass.filelogs=jlp.perf.aspects.abstractAspects.AbstractIntrospectionClass.filelogs

#AbstractIntrospectionException
comment.jlp.perf.aspects.abstractAspects.AbstractIntrospectionException=<html>Introspection of Class Methods that throw Exception. No property to set except the expression of the pointcut</html>
jlp.perf.aspects.abstractAspects.AbstractIntrospectionException.type=abstract
jlp.perf.aspects.abstractAspects.AbstractIntrospectionException.pointcut=exception
jlp.perf.aspects.abstractAspects.AbstractIntrospectionException.filelogs=jlp.perf.aspects.abstractAspects.AbstractIntrospectionException.filelogs.filelogs

#AbstractPoolDBCPCountJDBCConnexions
comment.jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions<html>=Tracking DBCP JDBC Connections. url=&gt; a particular url to follow a datasource or empy.<br/> freqLogs =&gt; frequency on tracing in file logs (validate connexion in the pool)</html>
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.type=abstract
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.pointcut=validateConnexion
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.filelogs=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.filelogs
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.param1=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.url
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.param2=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexions.freqLogs

#AbstractPoolDBCPCountJDBCConnexionsMultiDS 
comment.jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS=<html>Tracking DBCP JDBC Connections Multi Data Sources.<br/> url=&gt; a particular url to follow a datasource or empy. <br/>freqLogs =&gt; frequency on tracing in file logs (validate connexion in the pool)</html>
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.type=abstract
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.pointcut=validateConnexion
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.filelogs=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.filelogs
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.param1=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.url
jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.param2=jlp.perf.aspects.abstractAspects.AbstractPoolDBCPCountJDBCConnexionsMultiDS.freqLogs

#AbstractPoolTomcatDBCPCountJDBCConnexions
comment.jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions=<html>Tracking Tomcat DBCP JDBC Connections <br/>url=&gt; a particular url to follow a datasource or empy. <br/>freqLogs =&gt; frequency on tracing in file logs (validate connexion in the pool)</html>
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.type=abstract
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.pointcut=validateConnexion
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.filelogs=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.filelogs
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.param1=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.url
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.param2=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexions.freqLogs

#AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS
comment.jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS=<html>Tracking Tomcat DBCP JDBC Connections Multi Data Sources.<br/> url=&gt; a particular url to follow a datasource or empy.<br/> freqLogs =&gt; frequency on tracing in file logs (validate connexion in the pool)</html>
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.type=abstract
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.pointcut=validateConnexion
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.filelogs=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.filelogs
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.param1=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.url
jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.param2=jlp.perf.aspects.abstractAspects.AbstractPoolTomcatDBCPCountJDBCConnexionsMultiDS.freqLogs

#AbstractReplaceMethodWebSMS
comment.jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS=<html>Modify a method.<br/> sleepTime =&gt; time that the Mock method has to sleep. <br/>traceEnabled (true/false) =&gt; for debuging or to have a log file to parse.<br/> retour =&gt; nothing means null or a String.</html>
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.type=abstract
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.filelogs=jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.filelogs
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.param1=jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.sleepTime
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.param2=jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.traceEnabled
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.param3=jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.retour
jlp.perf.aspects.abstractAspects.AbstractReplaceMethodWebSMS.pointcut=methods

#AbstractEhCacheSizeTracking
comment.jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking=<html>Tracking EhCache objects;<br/> freqLogs frequency of logging on put <br/>method. =&gt; integer, if terminated by ms, the frequency is in ms.<br/> computeSizesInBytesEnabled =&gt; this needs to serialize all objects in cache, may be heavy ( true/false)</html>
jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.type=abstract
jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.filelogs=jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.filelogs
jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.param1=jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.freqLogs
jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.param2=jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.computeSizesInBytesEnabled
jlp.perf.aspects.abstractAspects.AbstractEhCacheSizeTracking.pointcut=methods

#AbstractToSynchroniseMethod 
comment.jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod=<html>To synchronise a method not initially synchronized.<br/> boolTrace =&gt; if true logs all the calls of the methods with the result of toString method if any, else "void_null". <br/>The string is cut after lengthString characters</html>
jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.filelogs
jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.param1=jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.boolTrace
jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.param2=jlp.perf.aspects.abstractAspects.AbstractToSynchroniseMethod.lengthString



#jlp.perf.aspects.abstractAspects.AbstractReplaceMethod;
comment.jlp.perf.aspects.abstractAspects.AbstractReplaceMethod=<html>To replace a method .<br/> boolTrace =&gt; if true logs all the calls of the methods <br/> typeReturn must be one of this type : void,int,long,double,float,boolean,String<br/>valueReturn is the constant value returned  according to the type<br/>sleeps is a couple of timeoutValue in ms like 1000;500 that means <br/> a timeout of 1000ms(+|-)random(0-500ms)<br/>  </html>
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.type=abstract
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.filelogs=jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.filelogs
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.param1=jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.boolTrace
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.param2=jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.typeReturn
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.param3=jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.valueReturn
jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.param4=jlp.perf.aspects.abstractAspects.AbstractReplaceMethod.sleeps




#jlp.perf.aspects.concreteAspects.ConcreteTester;
comment.jlp.perf.aspects.concreteAspects.ConcreteTester=<html> <b>ConcreteTester</b> Testing is a pointcut is correctly woven no paramreters to set.</html>
jlp.perf.aspects.concreteAspects.ConcreteTester.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteTester.pointcut=methods





#ConcreteAxisDurationServices
comment.jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices=<html>Durations of Axis Services . durationMini ( in ms) =&gt; track services which duration &gt; durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices.filelogs=jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices.filelogs
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices.param1=jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServices.durationMini

#ConcreteReplaceMethod
comment.jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod=<html>Modify a method .<br/> sleepTime =&gt; time that the Mock method has to sleep.<br/> traceEnabled (true/false) =&gt; for debuging or to have a log file to parse.</html>
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.filelogs=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.filelogs
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.param1=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.sleepTime
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.param2=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethod.traceEnabled

#ConcreteEhCacheSizeTracking
comment.jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking=<html>Tracking EhCache objects;<br/> freqLogs frequency of logging on put method =&gt; integer, if terminated by ms, the frequency is in ms.</html>
jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.filelogs=jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.filelogs
jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.param1=jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.freqLogs
jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.param2=jlp.perf.aspects.concreteAspects.ConcreteEhCacheSizeTracking.computeSizesInBytesEnabled


#ConcreteReplaceMethodWebSMS
comment.jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS=<html>Modify a method.<br/> sleepTime =&gt; time that the Mock method has to sleep. <br/>traceEnabled (true/false) =&gt; for debuging or to have a log file to parse.</html>
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.filelogs=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.filelogs
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.param1=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.sleepTime
jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.param2=jlp.perf.aspects.concreteAspects.ConcreteReplaceMethodWebSMS.traceEnabled


#ConcreteWeaveThreadAndRunnable
comment.jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable=<html>How to weave Runnable and Thread.<br/> sleepTime =&gt; time that the Mock method has to sleep.<br/> traceEnabled (true/false) =&gt; for debuging or to have a log file to parse.</html>
jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.filelogs=jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.filelogs
jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.param1=jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.sleepTime
jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.param2=jlp.perf.aspects.concreteAspects.ConcreteWeaveThreadAndRunnable.traceEnabled

#ConcreteAxisDurationServicesPercflow
comment.jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow=<html>Durations of Axis Services.<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow.filelogs=jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow.filelogs
jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow.param1=jlp.perf.aspects.concreteAspects.ConcreteAxisDurationServicesPercflow.durationMini

#ConcreteCountJDBCConnexions
comment.jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions=<html>Count JDBC Connections.<br/> freqLogs =&gt; Integer frequency on tracing in file logs (validate connexion in the pool)</html>
jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions.filelogs=jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions.filelogs
jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions.param1=jlp.perf.aspects.concreteAspects.ConcreteCountJDBCConnexions.freqLogs

#ConcreteJaxrpcDurationServices
comment.jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices=<html>Track Duration Jax RPC services.<br/> durationMini ( in ms) =&gt; track services which duration &gt;durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices.filelogs=jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices.filelogs
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices.param1=jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServices.durationMini

#ConcreteJaxrpcDurationServicesPercflow
comment.jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow=<html>Track Duration Jax RPC services. <br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow.filelogs=jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow.filelogs
jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow.param1=jlp.perf.aspects.concreteAspects.ConcreteJaxrpcDurationServicesPercflow.durationMini

#ConcreteJoltDurationServices
comment.jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices=<html>Durations of Jolt Services.<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices.filelogs=jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices.filelogs
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices.param1=jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServices.durationMini

#ConcreteJoltDurationServicesPercflow
comment.jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow=<html>Durations of Jolt Services .<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini</html>
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow.filelogs=jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow.filelogs
jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow.param1=jlp.perf.aspects.concreteAspects.ConcreteJoltDurationServicesPercflow.durationMini

#ConcreteSqlStatementsDuration
comment.jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration=<html>Duration of Prepared Statement. <br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini.<br/> stripBeforeWhereBool ( true/false) =&gt; trace SQL statement after where clause or not.<br/> longMaxReq ( int) =&gt; number masx of character logged of the statement(0 means no truncate).<br/>boolBindParameters (true/false) to replace bound values in preparedStatement</html>
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.filelogs=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.filelogs
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.param1=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.durationMini
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.param2=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.stripBeforeWhereBool
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.param3=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.longMaxReq
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.param4=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDuration.boolBindParameters

#ConcreteSqlStatementsThrowingException
comment.jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException=<html>Tracking Exceptions when executing Prepared Statements.<br/> regexpPattern ( String) =&gt; a valid Pattern ( java.util.Pattern).<br/> stripBeforeWhereBool ( true/false) =&gt; trace SQL statement after where clause or not. <br/>longMaxReq ( int) =&gt; number max of character logged of the statement and the sql Exception (0 means no truncate). <br/>boolStackTrace (true/false) =&gt; include or not the stackTrace in the lcsv log file.<br/>boolBindParameters (true/false) to replace bound values in preparedStatement</html>
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.filelogs=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.filelogs
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.param1=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.regexpPattern
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.param2=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.stripBeforeWhereBool
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.param3=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.longMaxReq
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.param4=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.boolStackTrace
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.param5=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsThrowingException.boolBindParameters





#ConcreteSqlStatementsDurationBis
comment.jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis=<html>Duration of Prepared Statement. <br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini.<br/> stripBeforeWhereBool ( true/false) =&gt; trace SQL statement after where clause or not. <br/>longMaxReq ( int) =&gt; number masx of character logged of te statement (0 means no truncate).<br/>boolBindParameters (true/false) to replace bound values in preparedStatement</html>
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.filelogs=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.filelogs
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.param1=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.durationMini
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.param2=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.stripBeforeWhereBool
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.param3=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.longMaxReq
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.param4=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationBis.boolBindParameters


#ConcreteSqlStatementsDurationJVM14
comment.jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14=<html>Duration of Prepared Statement JVM 1.4.<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini. <br/>stripBeforeWhereBool ( true/false) =&gt; trace SQL statement after where clause or not. <br/>longMaxReq ( int) =&gt; number masx of character logged of te statement (0 means no truncate).<br/>boolBindParameters (true/false) to replace bound values in preparedStatement</html>
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.filelogs=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.filelogs
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.param1=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.durationMini
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.param2=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.stripBeforeWhereBool
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.param3=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.longMaxReq
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.param4=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationJVM14.boolBindParameters



#ConcreteSqlStatementsDurationPercflow
comment.jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow=<html>Duration of Prepared Statement . <br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini. stripBeforeWhereBool ( true/false) =&gt; trace SQL statement after where clause or not. <br/>longMaxReq ( int) =&gt; number masx of character logged of te statement (0 means no truncate).<br/>boolBindParameters (true/false) to replace bound values in preparedStatement</html>
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.filelogs=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.filelogs
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.param1=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.durationMini
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.param2=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.stripBeforeWhereBool
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.param3=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.longMaxReq
jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.param4=jlp.perf.aspects.concreteAspects.ConcreteSqlStatementsDurationPercflow.boolBindParameters


#AbstractDurationSimpleMethodLengthParameters
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters=<html>Tracking Duration of Methods with Length of parameters. <br/> durationMini ( in ms) =&gt; track services which duration > durationMini. <br/>parameters ( int] =&gt; List of rank of parameter myMethod(param0,.., paramp,..paramn) separated by , or ; <br/>ex : 0,15,30 analyzes the length of the fitsr parameter, the 16th paramater ant the 31th parameter</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.parameters
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.param2=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParameters.durationMini

#AbstractDurationSimpleMethodLengthParametersPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow=<html>Tracking Duration of Methods with Lengts of parameters.<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini. <br/> parameters ( int] =&gt; List of rank of parameter myMethod(param0,.., paramp,..paramn) separated by , or ; <br/>ex : 0,15,30 analyzes the length of the fitsr parameter, the 16th paramater ant the 31th parameter</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.parameters
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.param2=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthParametersPercflow.durationMini

#AbstractDurationSimpleMethodLengthReturnPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow=<html>Tracking Duration of Methods with Length of return Value.<br/> durationMini ( in ms) =&gt; track services which duration &gt; durationMini.</html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturnPercflow.durationMini

#AbstractDurationSimpleMethodLengthReturn
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn=<html>Tracking Duration of Methods with Length of return Value .<br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini. </html>
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLengthReturn.durationMini

#AbstractDurationSimpleMethodValueReturn
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLenghtReturn=<html>Tracking Duration of Methods with return Value  and Length of return .<br/>durationMini ( in ms) =&gt; track services which duration &gt; durationMini.</html> 
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturn.durationMini

#AbstractDurationSimpleMethodValueReturnPercflow
comment.jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodLenghtReturnPercflow=<html>Tracking Duration of Methods with return Value and Length of return . <br/>durationMini ( in ms) =&gt; track services which duration > durationMini.</html> 
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.type=abstract
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.filelogs=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.filelogs
jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.param1=jlp.perf.aspects.abstractAspects.AbstractDurationSimpleMethodValueReturnPercflow.durationMini

#jlp.perf.aspects.abstractAspects.AbstractGenericAspect
comment.jlp.perf.aspects.abstractAspects.AbstractGenericAspect=<html>Exposing fields of classes  for classes that are not MBean. The number of instances <b> must be small </b> as for examples pool of threads, connections, EJB, ... <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:&lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.type=abstract
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.param1=jlp.perf.aspects.abstractAspects.AbstractGenericAspect.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.param2=jlp.perf.aspects.abstractAspects.AbstractGenericAspect.listWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.param3=jlp.perf.aspects.abstractAspects.AbstractGenericAspect.depthIntrospect
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.param4=jlp.perf.aspects.abstractAspects.AbstractGenericAspect.listNotWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect.param5=jlp.perf.aspects.abstractAspects.AbstractGenericAspect.isGetThis

#jlp.perf.aspects.abstractAspects.AbstractGenericAspect0
comment.jlp.perf.aspects.abstractAspects.AbstractGenericAspect0=<html>Exposing fields of classes  for classes that are not MBean. The number of instances <b> must be small </b> as for examples pool of threads, connections, EJB, ... <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:&lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.type=abstract
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.param1=jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.param2=jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.listWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.param3=jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.depthIntrospect
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.param4=jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.listNotWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.param5=jlp.perf.aspects.abstractAspects.AbstractGenericAspect0.isGetThis

#jlp.perf.aspects.abstractAspects.AbstractGenericAspect1
comment.jlp.perf.aspects.abstractAspects.AbstractGenericAspect1=<html>Exposing fields of classes  for classes that are not MBean. The number of instances <b> must be small </b> as for examples pool of threads, connections, EJB, ... <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:&lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.type=abstract
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.param1=jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.param2=jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.listWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.param3=jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.depthIntrospect
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.param4=jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.listNotWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.param5=jlp.perf.aspects.abstractAspects.AbstractGenericAspect1.isGetThis

#jlp.perf.aspects.abstractAspects.AbstractGenericAspect2
comment.jlp.perf.aspects.abstractAspects.AbstractGenericAspect2=<html>Exposing fields of classes  for classes that are not MBean. The number of instances <b> must be small </b> as for examples pool of threads, connections, EJB, ... <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:&lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.type=abstract
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.param1=jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.param2=jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.listWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.param3=jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.depthIntrospect
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.param4=jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.listNotWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.param5=jlp.perf.aspects.abstractAspects.AbstractGenericAspect2.isGetThis


#jlp.perf.aspects.abstractAspects.AbstractGenericAspect3
comment.jlp.perf.aspects.abstractAspects.AbstractGenericAspect3=<html>Exposing fields of classes  for classes that are not MBean. The number of instances <b> must be small </b> as for examples pool of threads, connections, EJB, ... <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:&lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.type=abstract
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.pointcut=methods
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.param1=jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.frequenceMeasure
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.param2=jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.listWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.param3=jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.depthIntrospect
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.param4=jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.listNotWeave
jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.param5=jlp.perf.aspects.abstractAspects.AbstractGenericAspect3.isGetThis


#jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize
comment.jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize=<html>Size of Hibernate session / JPA EntityManager  in bytes . <br/>frequenceMeasure ( int) =&gt; integer frequency of taking size when a Session/entityManager is closed,if terminated by ms, the frequency is in ms .<br/>serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.filelogs=jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.filelogs
jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.param1=jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.frequenceMeasure
jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.param2=jlp.perf.aspects.concreteAspects.ConcreteJPACacheFirstLevelSize.serialization



#ConcreteHttpSessionSize
comment.jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize=<html>Size of Http Sessions in bytes .<br/>frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed, integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.filelogs=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.filelogs
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.param1=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.frequenceMeasure
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.param2=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSize.serialization

#ConcreteHttpSessionSizeSimple
comment.jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple=<html>Size of Http Sessions in bytes .<br/>frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed, integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.filelogs=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.filelogs
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.param1=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.frequenceMeasure
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.param2=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeSimple.serialization






#ConcreteCommonPoolApache
comment.jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache=<html>Suivi Pool Common Apache . <br/>frequenceMeasure ( int) =&gt; frequency of taking size when an object is borrowed or returned</html>
jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache.filelogs=jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache.filelogs
jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache.param1=jlp.perf.aspects.concreteAspects.ConcreteCommonPoolApache.frequenceMeasure


#jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic
comment.jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic=<html>Hibernate Statistics when they are enabled and size of sessions. <br/>FrequenceMeasure =&gt; integer, if terminated by ms, the frequency is in ms .<br/> boolComputeSizeSession (true/false )=&gt; false the size is not computed.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.filelogs=jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.filelogs
jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.param1=jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.frequenceMeasure
jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.param2=jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.serialization
jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.param3=jlp.perf.aspects.concreteAspects.ConcreteHibernateSessionStatistic.boolComputeSizeSession


#jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5
comment.jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5=<html>Size of Http Session in Jonas5.<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a HttpSession  is destroyed or invalidated,integer, if terminated by ms, the frequency is in ms.serialization =&gt; <br/>boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.type=concrete
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.filelogs=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.filelogs
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.param1=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.frequenceMeasure
jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.param2=jlp.perf.aspects.concreteAspects.ConcreteHttpSessionSizeJonas5.serialization




## Aspects pour Mbean
#jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod
comment.jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod=<html>Tracking Duration of Methods and CPU Time</html>
jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractCPUDurationSimpleMethod.pointcut=methods

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric;
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:$lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0;
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:$lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric0.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1;
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:$lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric1.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2;
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:$lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric2.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3;
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:$lt;integer&gt; means that all classes are introspected with the same depth &lt;integer&gt;<br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanNumeric3.isGetThis


## Aspects pour Mbean
#jlp.aspectsJMX.abstractAspects.AbstractGenericMBean
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;))+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean0.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean1.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBean3.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBean2.isGetThis

#jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15
comment.jlp.aspectsJMX.abstractAspects.AbstractGenericMBean=<html>Exposing fields of classes in the MBeanServer for classes that are not MBean. <br/> The field exposed are type of : int, Integer, double,boolean, Double ,float, Float, long, Long,Boolean, String.<br/> The frequency without unit, means that the MBean is set with this every x weaving, with "ms" unit means evey x millis-seconds from last weaving. <br/>The listNotWeave contains the regex pattern the list of joinpoint that must not be used in the advice of the Aspect, separated by ; =&gt; at least, it corresponds to the pattern of the pointcut, necessary to avoid infinity loop of weaving.<br/> listWeave are regex pattern for joinpoint to include. The priority is excluding against including, if a joinpoint is both included and excluded =&gt; it is excluded. <br/>The depthIntrospect is a series of pattern like : (&lt;package&gt;.&lt;Class&gt;:&lt;depthOfAnalyse&gt;;)+ , depthOfAnalyse is an integer =&gt; 0 means that only the class and superclass are introspected, i=1 =&gt; class,superclass and super.superclass are introspected and so on ; -1 means that onlythe current class is introspected. The pattern All:<integer> means that all classes are introspected with the same depth <integer><br/>isGetThis set to true, take the this joinpoint Object else take the Target joinpoint Object</html>
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.type=abstract
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.pointcut=methods
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.param1=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.frequenceMeasure
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.param2=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.listWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.param3=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.depthIntrospect
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.param4=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.listNotWeave
jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.param5=jlp.aspectsJMX.abstractAspects.AbstractGenericMBeanJVM15.isGetThis


## Aspects pour Mbean
#ConcreteHttpSessionSize
comment.jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize=<html>Size of Http Sessions in bytes. <br/>frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed, integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize.param1=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize.frequenceMeasure
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize.param2=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSize.serialization

## Aspects pour Mbean
#ConcreteHttpSessionSizeWithFile
comment.jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeWithFile=<html>Size of Http Sessions in bytes. <br/>frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed,integer, if terminated by ms, the frequency is in ms,integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.<html>
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeWithFile.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeWithFile.param1=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeWithFile.frequenceMeasure


## Aspects pour Mbean
#jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5
comment.jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJona5=<html>Size of Http Sessions in bytes .<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed,integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.<html>
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5.param1=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5.frequenceMeasure
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5.param2=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeJonas5.serialization

## Aspects pour Mbean
#jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic
comment.jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic=<html>Size of Http Sessions in bytes.<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed,integer, if terminated by ms, the frequency is in ms.<br/> serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic.param1=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic.frequenceMeasure
jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic.param2=jlp.aspectsJMX.concreteAspects.ConcreteHttpSessionSizeBasic.serialization

## Aspects pour Mbean
#jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache
comment.jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache=<html>Tracking Apache Common Object Pools .<br/> frequenceMeasure ( int) =&gt; frequency of taking size when an object is borrowed or returned</html>
jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache.param1=jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApache.frequenceMeasure

## Aspects pour Mbean 
#jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive . 
comment.jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive=<html>Tracking Apache Common Object Pools . <br/>frequenceMeasure ( int) =&gt; frequency of taking size when an object is borrowed or returned .<br/>serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.</html>
jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive.param1=jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive.frequenceMeasure  
jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive.param2=jlp.aspectsJMX.concreteAspects.ConcreteCommonPoolApacheDurationOfLive.serialization
    


## Aspects pour Mbean
# jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize
comment.jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize=<html>Size of Hibernate Sessions in bytes.<br/> frequenceMeasure ( int) =&gt; frequency of taking size when a Session/entityManager is closed. <br/>serialization =&gt; boolean true : serialization by writeObjet if any ; false : computing of retained size of objets by deep analysis of the sessions.<html>
jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize.param1=jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize.frequenceMeasure
jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize.param2=jlp.aspectsJMX.concreteAspects.ConcreteJPACacheFirstLevelSize.serialization

## Aspects pour Mbean
#jlp.aspectsJMX.concreteAspects.ConcreteSqlStatementsDuration
comment.jlp.aspectsJMX.concreteAspects.ConcreteSqlStatementsDuration=<html> Performance duration / count SqlStatements (PreparedStatement))</html>
jlp.aspectsJMX.concreteAspects.ConcreteSqlStatementsDuration.type=concrete

## Aspects pour Mbean
#ConcreteEhCacheSizeTracking
comment.jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking=<html>Tracking EhCache objects; <br/>freqLogs=&gt; frequency of logging on put method,integer, if terminated by ms, the frequency is in ms.<br/> computeSizesInBytesEnabled ( true/false) =&gt; serialization of elements that can take time. <br/>tracesLogsEnabled =&gt; generates a CSV file to parse<html>
jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.type=concrete
jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.filelogs=jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.filelogs
jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.param1=jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.freqLogs
jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.param2=jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.computeSizesInBytesEnabled
jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.param3=jlp.aspectsJMX.concreteAspects.ConcreteEhCacheSizeTracking.traceLogEnabled
